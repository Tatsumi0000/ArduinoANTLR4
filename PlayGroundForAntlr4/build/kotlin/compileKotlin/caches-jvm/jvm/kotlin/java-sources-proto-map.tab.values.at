00H&J02
*00H&J02
*00H&J02
*00H&J!02
*00H&J#02
*00H&J%02
*00H&J'02
*00H&J)02
*00H&J+02
*00H&J-02
*00H&J/02
*00H&J102
*00H&J302
*00H&J502
*00H&J702
*0 0 H&J902
*0!0!H&J;02
*0"0"H&J=02
*0#0#H&J?02
*0$0$H&JA02
*0%0%H&JC02
*0&0&H&JE02
*0'0'H&JG02
*0(0(H&JI02
*0)0)H&JK02
*0*0*H&JM02
*0+0+H&JO02
*0,0,H&JQ02
*0-0-H&JS02
*0.0.H&JU02
*0/0/H&JW02
*0000H&JY02
*0101H&J[02
*0202H&J]02
*0303H&J_02
*0404H&Ja02
*0505H&Jc02
*0606H&Je02
*0707H&Jg02
*0808H&Ji02
*0909H&Jk02
*0:0:H&Jm02
*0;0;H&Jo02
*0<0<H&Jq02
*0=0=H&Js02
*0>0>H&Ju02
*0?0?H&Jw02
*0@0@H&Jy02
*0A0AH&J{02
*0B0BH&J}02
*0C0CH&J02
*0D0DH&JÅ02
*0E0EH&JÉ02
*0F0FH&JÖ02
*0G0GH&Já02
*0H0HH&Jâ02
*0I0IH&Jã02
*0J0JH&Jç02
*0K0KH&Jè02
*0L0LH&Jë02
*0M0MH&Jì02
*0N0NH&Jï02
*0O0OH&Jó02
*0P0PH&Jô02
*0Q0QH&Jõ02
*0R0RH&Jù02
*0S0SH&Jü02
*0T0TH&J°02
*0U0UH&J£02
*0V0VH&J•02
*0W0WH&Jß02
*0X0XH&J©02
*0Y0YH&J´02
*0Z0ZH&J≠02
*0[0[H&JØ02
*0\0\H&J±02
*0]0]H&J≥02
*0^0^H&Jµ02
*0_0_H&J∑02
*0`0`H&Jπ02
*0a0aH&Jª02
*0b0bH&JΩ02
*0c0cH&Jø02
*0d0dH&J¡02
*0e0eH&J√02
*0f0fH&J≈02
*0g0gH&J«02
*0h0hH&J…02
*0i0iH&JÀ02
*0j0jH&JÕ02
*0k0kH&Jœ02
*0l0lH&J—02
*0m0mH&J”02
*0n0nH&J’02
*0o0oH&J◊02
*0p0pH&JŸ02
*0q0qH&J€02
*0r0rH&J›02
*0s0sH&Jﬂ02
*0t0tH&J·02
*0u0uH&J„02
*0v0vH&JÂ02
*0w0wH&JÁ02
*0x0xH&JÈ02
*0y0yH&JÎ02
*0z0zH&JÌ02
*0{0{H&JÔ02
*0|0|H&JÒ02
*0}0}H&JÛ02
*0~0~H&Jı02
*00H&J˜02

*0Ä0ÄH&J˘02

*0Å0ÅH&J˚02

*0Ç0ÇH&J˝02

*0É0ÉH&Jˇ02

*0Ñ0ÑH&JÅ02

*0Ö0ÖH&JÉ02

*0Ü0ÜH&JÖ02

*0á0áH&Já02

*0à0àH&Jâ02

*0â0âH&Jã02

*0ä0äH&Jç02

*0ã0ãH&Jè02

*0å0åH&Jë02

*0ç0çH&Jì02

*0é0éH&Jï02

*0è0èH&Jó02

*0ê0êH&Jô02

*0ë0ëH&Jõ02

*0í0íH&Jù02

*0ì0ìH&Jü02

*0î0îH&J°02

*0ï0ïH&J£02

*0ñ0ñH&J•02

*0ó0óH&Jß02

*0ò0òH&J©02

*0ô0ôH&J´02

*0ö0öH&J≠02

*0õ0õH&JØ02

*0ú0úH&J±02

*0ù0ùH&J≥02

*0û0ûH&Jµ02

*0ü0üH&J∑02

*0†0†H&Jπ02

*0°0°H&Jª02

*0¢0¢H&JΩ02

*0£0£H&Jø02

*0§0§H&J¡02

*0•0•H&J√02

*0¶0¶H&J≈02

*0ß0ßH&J«02

*0®0®H&J…02

*0©0©H&JÀ02

*0™0™H&JÕ02

*0´0´H&Jœ02

*0¨0¨H&J—02

*0≠0≠H&J”02

*0Æ0ÆH&J’02

*0Ø0ØH&J◊02

*0∞0∞H&JŸ02

*0±0±H&J€02

*0≤0≤H&J›02

*0≥0≥H&Jﬂ02

*0¥0¥H&J·02

*0µ0µH&J„02

*0∂0∂H&JÂ02

*0∑0∑H&JÁ02

*0∏0∏H&JÈ02

*0π0πH&JÎ02

*0∫0∫H&JÌ02

*0ª0ªH&JÔ02

*0º0ºH&JÒ02

*0Ω0ΩH&JÛ02

*0æ0æH&Jı02

*0ø0øH&J˜02

*0¿0¿H&J˘02

*0¡0¡H&J˚02

*0¬0¬H&J˝02

*0√0√H&Jˇ02

*0ƒ0ƒH&JÅ02

*0≈0≈H&JÉ02

*0∆0∆H&JÖ02

*0«0«H&Já02

*0»0»H&Jâ02

*0…0…H&Jã02

*0 0 H&Jç02

*0À0ÀH&Jè02

*0Ã0ÃH&Jë02

*0Õ0ÕH&Jì02

*0Œ0ŒH&Jï02

*0œ0œH&Jó02

*0–0–H&Jô02

*0—0—H&Jõ02
*0
0
H&Jú02
*00H&Jù02
*00H&Jû02
*00H&Jü02
*00H&J†02
*00H&J°02
*00H&J¢02
*00H&J£02
*00H&J§02
*00H&J•02
*00H&J¶02
*00H&Jß02
*00H&J®02
*00H&J©02
*00H&J™02
*00H&J´02
*00H&J¨02
*00H&J≠02
*00H&JÆ02
*00H&JØ02
*00H&J∞02
*00H&J±02
*0 0 H&J≤02
*0!0!H&J≥02
*0"0"H&J¥02
*0#0#H&Jµ02
*0$0$H&J∂02
*0%0%H&J∑02
*0&0&H&J∏02
*0'0'H&Jπ02
*0(0(H&J∫02
*0)0)H&Jª02
*0*0*H&Jº02
*0+0+H&JΩ02
*0,0,H&Jæ02
*0-0-H&Jø02
*0.0.H&J¿02
*0/0/H&J¡02
*0000H&J¬02
*0101H&J√02
*0202H&Jƒ02
*0303H&J≈02
*0404H&J∆02
*0505H&J«02
*0606H&J»02
*0707H&J…02
*0808H&J 02
*0909H&JÀ02
*0:0:H&JÃ02
*0;0;H&JÕ02
*0<0<H&JŒ02
*0=0=H&Jœ02
*0>0>H&J–02
*0?0?H&J—02
*0@0@H&J“02
*0A0AH&J”02
*0B0BH&J‘02
*0C0CH&J’02
*0D0DH&J÷02
*0E0EH&J◊02
*0F0FH&Jÿ02
*0G0GH&JŸ02
*0H0HH&J⁄02
*0I0IH&J€02
*0J0JH&J‹02
*0K0KH&J›02
*0L0LH&Jﬁ02
*0M0MH&Jﬂ02
*0N0NH&J‡02
*0O0OH&J·02
*0P0PH&J‚02
*0Q0QH&J„02
*0R0RH&J‰02
*0S0SH&JÂ02
*0T0TH&JÊ02
*0U0UH&JÁ02
*0V0VH&JË02
*0W0WH&JÈ02
*0X0XH&JÍ02
*0Y0YH&JÎ02
*0Z0ZH&JÏ02
*0[0[H&JÌ02
*0\0\H&JÓ02
*0]0]H&JÔ02
*0^0^H&J02
*0_0_H&JÒ02
*0`0`H&JÚ02
*0a0aH&JÛ02
*0b0bH&JÙ02
*0c0cH&Jı02
*0d0dH&Jˆ02
*0e0eH&J˜02
*0f0fH&J¯02
*0g0gH&J˘02
*0h0hH&J˙02
*0i0iH&J˚02
*0j0jH&J¸02
*0k0kH&J˝02
*0l0lH&J˛02
*0m0mH&Jˇ02
*0n0nH&JÄ02
*0o0oH&JÅ02
*0p0pH&JÇ02
*0q0qH&JÉ02
*0r0rH&JÑ02
*0s0sH&JÖ02
*0t0tH&JÜ02
*0u0uH&Já02
*0v0vH&Jà02
*0w0wH&Jâ02
*0x0xH&Jä02
*0y0yH&Jã02
*0z0zH&Jå02
*0{0{H&Jç02
*0|0|H&Jé02
*0}0}H&Jè02
*0~0~H&Jê02
*00H&Jë02

*0Ä0ÄH&Jí02

*0Å0ÅH&Jì02

*0Ç0ÇH&Jî02

*0É0ÉH&Jï02

*0Ñ0ÑH&Jñ02

*0Ö0ÖH&Jó02

*0Ü0ÜH&Jò02

*0á0áH&Jô02

*0à0àH&Jö02

*0â0âH&Jõ02

*0ä0äH&Jú02

*0ã0ãH&Jù02

*0å0åH&Jû02

*0ç0çH&Jü02

*0é0éH&J†02

*0è0èH&J°02

*0ê0êH&J¢02

*0ë0ëH&J£02

*0í0íH&J§02

*0ì0ìH&J•02

*0î0îH&J¶02

*0ï0ïH&Jß02

*0ñ0ñH&J®02

*0ó0óH&J©02

*0ò0òH&J™02

*0ô0ôH&J´02

*0ö0öH&J¨02

*0õ0õH&J≠02

*0ú0úH&JÆ02

*0ù0ùH&JØ02

*0û0ûH&J∞02

*0ü0üH&J±02

*0†0†H&J≤02

*0°0°H&J≥02

*0¢0¢H&J¥02

*0£0£H&Jµ02

*0§0§H&J∂02

*0•0•H&J∑02

*0¶0¶H&J∏02

*0ß0ßH&Jπ02

*0®0®H&J∫02

*0©0©H&Jª02

*0™0™H&Jº02

*0´0´H&JΩ02

*0¨0¨H&Jæ02

*0≠0≠H&Jø02

*0Æ0ÆH&J¿02

*0Ø0ØH&J¡02

*0∞0∞H&J¬02

*0±0±H&J√02

*0≤0≤H&Jƒ02

*0≥0≥H&J≈02

*0¥0¥H&J∆02

*0µ0µH&J«02

*0∂0∂H&J»02

*0∑0∑H&J…02

*0∏0∏H&J 02

*0π0πH&JÀ02

*0∫0∫H&JÃ02

*0ª0ªH&JÕ02

*0º0ºH&JŒ02

*0Ω0ΩH&Jœ02

*0æ0æH&J–02

*0ø0øH&J—02

*0¿0¿H&J“02

*0¡0¡H&J”02

*0¬0¬H&J‘02

*0√0√H&J’02

*0ƒ0ƒH&J÷02

*0≈0≈H&J◊02

*0∆0∆H&Jÿ02

*0«0«H&JŸ02

*0»0»H&J⁄02

*0…0…H&J€02

*0 0 H&J‹02

*0À0ÀH&J›02

*0Ã0ÃH&Jﬁ02

*0Õ0ÕH&Jﬂ02

*0Œ0ŒH&J‡02

*0œ0œH&J·02

*0–0–H&J‚02

*0—0—H&  7>
CPP14Listener
org
antlr
v4
runtime
tree
ParseTreeListener
enterAbstractdeclarator
kotlin
Unit
ctx
CPP14Parser
AbstractdeclaratorContext
enterAbstractpackdeclarator
AbstractpackdeclaratorContext
enterAccessspecifier
AccessspecifierContext
enterAdditiveexpression
AdditiveexpressionContext
enterAliasdeclaration
AliasdeclarationContext
enterAlignmentspecifier
AlignmentspecifierContext
enterAndexpression
AndexpressionContext
enterAsmdefinition
AsmdefinitionContext
enterAssignmentexpression
AssignmentexpressionContext
enterAssignmentoperator
AssignmentoperatorContext
enterAttribute
AttributeContext
enterAttributeargumentclause
AttributeargumentclauseContext
enterAttributedeclaration
AttributedeclarationContext
enterAttributelist
AttributelistContext
enterAttributenamespace
AttributenamespaceContext
enterAttributescopedtoken
AttributescopedtokenContext
enterAttributespecifier
AttributespecifierContext
enterAttributespecifierseq
AttributespecifierseqContext
enterAttributetoken
AttributetokenContext
enterBalancedtoken
BalancedtokenContext
enterBalancedtokenseq
BalancedtokenseqContext
enterBaseclause
BaseclauseContext
enterBasespecifier
BasespecifierContext
enterBasespecifierlist
BasespecifierlistContext
enterBasetypespecifier
BasetypespecifierContext
enterBlockdeclaration
BlockdeclarationContext
enterBooleanliteral
BooleanliteralContext
enterBracedinitlist
BracedinitlistContext
enterBraceorequalinitializer
BraceorequalinitializerContext
enterCapture
CaptureContext
enterCapturedefault
CapturedefaultContext
enterCapturelist
CapturelistContext
enterCastexpression
CastexpressionContext
enterClasshead
ClassheadContext
enterClassheadname
ClassheadnameContext
enterClasskey
ClasskeyContext
enterClassname
ClassnameContext
enterClassordecltype
ClassordecltypeContext
enterClassspecifier
ClassspecifierContext
enterClassvirtspecifier
ClassvirtspecifierContext
enterCompoundstatement
CompoundstatementContext
enterCondition
ConditionContext
enterConditionalexpression
ConditionalexpressionContext
enterConstantexpression
ConstantexpressionContext
enterConversiondeclarator
ConversiondeclaratorContext
enterConversionfunctionid
ConversionfunctionidContext
enterConversiontypeid
ConversiontypeidContext
enterCtorinitializer
CtorinitializerContext
enterCvqualifier
CvqualifierContext
enterCvqualifierseq
CvqualifierseqContext
enterDeclaration
DeclarationContext
enterDeclarationseq
DeclarationseqContext
enterDeclarationstatement
DeclarationstatementContext
enterDeclarator
DeclaratorContext
enterDeclaratorid
DeclaratoridContext
enterDeclspecifier
DeclspecifierContext
enterDeclspecifierseq
DeclspecifierseqContext
enterDecltypespecifier
DecltypespecifierContext
enterDeleteexpression
DeleteexpressionContext
"enterDynamicexceptionspecification
$DynamicexceptionspecificationContext
enterElaboratedtypespecifier
ElaboratedtypespecifierContext
enterEmptydeclaration
EmptydeclarationContext
enterEnumbase
EnumbaseContext
enterEnumerator
EnumeratorContext
enterEnumeratordefinition
EnumeratordefinitionContext
enterEnumeratorlist
EnumeratorlistContext
enterEnumhead
EnumheadContext
enterEnumkey
EnumkeyContext
enterEnumname
EnumnameContext
enterEnumspecifier
EnumspecifierContext
enterEqualityexpression
EqualityexpressionContext
enterExceptiondeclaration
ExceptiondeclarationContext
enterExceptionspecification
ExceptionspecificationContext
enterExclusiveorexpression
ExclusiveorexpressionContext
enterExplicitinstantiation
ExplicitinstantiationContext
enterExplicitspecialization
ExplicitspecializationContext
enterExpression
ExpressionContext
enterExpressionlist
ExpressionlistContext
enterExpressionstatement
ExpressionstatementContext
!enterExtensionnamespacedefinition
#ExtensionnamespacedefinitionContext
enterForinitstatement
ForinitstatementContext
enterForrangedeclaration
ForrangedeclarationContext
enterForrangeinitializer
ForrangeinitializerContext
enterFunctionbody
FunctionbodyContext
enterFunctiondefinition
FunctiondefinitionContext
enterFunctionspecifier
FunctionspecifierContext
enterFunctiontryblock
FunctiontryblockContext
enterHandler
HandlerContext
enterHandlerseq
HandlerseqContext
enterIdexpression
IdexpressionContext
enterInclusiveorexpression
InclusiveorexpressionContext
enterInitcapture
InitcaptureContext
enterInitdeclarator
InitdeclaratorContext
enterInitdeclaratorlist
InitdeclaratorlistContext
enterInitializer
InitializerContext
enterInitializerclause
InitializerclauseContext
enterInitializerlist
InitializerlistContext
enterIterationstatement
IterationstatementContext
enterJumpstatement
JumpstatementContext
enterLabeledstatement
LabeledstatementContext
enterLambdacapture
LambdacaptureContext
enterLambdadeclarator
LambdadeclaratorContext
enterLambdaexpression
LambdaexpressionContext
enterLambdaintroducer
LambdaintroducerContext
enterLinkagespecification
LinkagespecificationContext
enterLiteral
LiteralContext
enterLiteraloperatorid
LiteraloperatoridContext
enterLogicalandexpression
LogicalandexpressionContext
enterLogicalorexpression
LogicalorexpressionContext
enterMemberdeclaration
MemberdeclarationContext
enterMemberdeclarator
MemberdeclaratorContext
enterMemberdeclaratorlist
MemberdeclaratorlistContext
enterMemberspecification
MemberspecificationContext
enterMeminitializer
MeminitializerContext
enterMeminitializerid
MeminitializeridContext
enterMeminitializerlist
MeminitializerlistContext
enterMultiplicativeexpression
MultiplicativeexpressionContext
enterNamednamespacedefinition
NamednamespacedefinitionContext
enterNamespacealias
NamespacealiasContext
enterNamespacealiasdefinition
NamespacealiasdefinitionContext
enterNamespacebody
NamespacebodyContext
enterNamespacedefinition
NamespacedefinitionContext
enterNamespacename
NamespacenameContext
enterNestednamespecifier
NestednamespecifierContext
enterNewdeclarator
NewdeclaratorContext
enterNewexpression
NewexpressionContext
enterNewinitializer
NewinitializerContext
enterNewplacement
NewplacementContext
enterNewtypeid
NewtypeidContext
enterNoexceptexpression
NoexceptexpressionContext
enterNoexceptspecification
NoexceptspecificationContext
enterNoptrabstractdeclarator
NoptrabstractdeclaratorContext
 enterNoptrabstractpackdeclarator
"NoptrabstractpackdeclaratorContext
enterNoptrdeclarator
NoptrdeclaratorContext
enterNoptrnewdeclarator
NoptrnewdeclaratorContext
enterOpaqueenumdeclaration
OpaqueenumdeclarationContext
enterOperatorfunctionid
OperatorfunctionidContext
 enterOriginalnamespacedefinition
"OriginalnamespacedefinitionContext
enterOriginalnamespacename
OriginalnamespacenameContext
enterParameterdeclaration
ParameterdeclarationContext
enterParameterdeclarationclause
!ParameterdeclarationclauseContext
enterParameterdeclarationlist
ParameterdeclarationlistContext
enterParametersandqualifiers
ParametersandqualifiersContext
enterPmexpression
PmexpressionContext
enterPointerliteral
PointerliteralContext
enterPostfixexpression
PostfixexpressionContext
enterPrimaryexpression
PrimaryexpressionContext
enterPseudodestructorname
PseudodestructornameContext
enterPtrabstractdeclarator
PtrabstractdeclaratorContext
enterPtrdeclarator
PtrdeclaratorContext
enterPtroperator
PtroperatorContext
enterPurespecifier
PurespecifierContext
enterQualifiedid
QualifiedidContext
 enterQualifiednamespacespecifier
"QualifiednamespacespecifierContext
enterRefqualifier
RefqualifierContext
enterRelationalexpression
RelationalexpressionContext
enterSelectionstatement
SelectionstatementContext
enterShiftexpression
ShiftexpressionContext
enterShiftoperator
ShiftoperatorContext
enterSimplecapture
SimplecaptureContext
enterSimpledeclaration
SimpledeclarationContext
enterSimpletemplateid
SimpletemplateidContext
enterSimpletypespecifier
SimpletypespecifierContext
enterStatement
StatementContext
enterStatementseq
StatementseqContext
enterStatic_assertdeclaration
Static_assertdeclarationContext
enterStorageclassspecifier
StorageclassspecifierContext
enterTemplateargument
TemplateargumentContext
enterTemplateargumentlist
TemplateargumentlistContext
enterTemplatedeclaration
TemplatedeclarationContext
enterTemplateid
TemplateidContext
enterTemplatename
TemplatenameContext
enterTemplateparameter
TemplateparameterContext
enterTemplateparameterlist
TemplateparameterlistContext
enterTheoperator
TheoperatorContext
enterThetypeid
ThetypeidContext
enterThetypename
ThetypenameContext
enterThrowexpression
ThrowexpressionContext
enterTrailingreturntype
TrailingreturntypeContext
enterTrailingtypespecifier
TrailingtypespecifierContext
enterTrailingtypespecifierseq
TrailingtypespecifierseqContext
enterTranslationunit
TranslationunitContext
enterTryblock
TryblockContext
enterTypedefname
TypedefnameContext
enterTypeidlist
TypeidlistContext
enterTypeidofexpr
TypeidofexprContext
enterTypeidofthetypeid
TypeidofthetypeidContext
enterTypenamespecifier
TypenamespecifierContext
enterTypeparameter
TypeparameterContext
enterTypespecifier
TypespecifierContext
enterTypespecifierseq
TypespecifierseqContext
enterUnaryexpression
UnaryexpressionContext
enterUnaryoperator
UnaryoperatorContext
enterUnnamednamespacedefinition
!UnnamednamespacedefinitionContext
enterUnqualifiedid
UnqualifiedidContext
enterUserdefinedliteral
UserdefinedliteralContext
enterUsingdeclaration
UsingdeclarationContext
enterUsingdirective
UsingdirectiveContext
enterVirtspecifier
VirtspecifierContext
enterVirtspecifierseq
VirtspecifierseqContext
exitAbstractdeclarator
exitAbstractpackdeclarator
exitAccessspecifier
exitAdditiveexpression
exitAliasdeclaration
exitAlignmentspecifier
exitAndexpression
exitAsmdefinition
exitAssignmentexpression
exitAssignmentoperator
exitAttribute
exitAttributeargumentclause
exitAttributedeclaration
exitAttributelist
exitAttributenamespace
exitAttributescopedtoken
exitAttributespecifier
exitAttributespecifierseq
exitAttributetoken
exitBalancedtoken
exitBalancedtokenseq
exitBaseclause
exitBasespecifier
exitBasespecifierlist
exitBasetypespecifier
exitBlockdeclaration
exitBooleanliteral
exitBracedinitlist
exitBraceorequalinitializer
exitCapture
exitCapturedefault
exitCapturelist
exitCastexpression
exitClasshead
exitClassheadname
exitClasskey
exitClassname
exitClassordecltype
exitClassspecifier
exitClassvirtspecifier
exitCompoundstatement
exitCondition
exitConditionalexpression
exitConstantexpression
exitConversiondeclarator
exitConversionfunctionid
exitConversiontypeid
exitCtorinitializer
exitCvqualifier
exitCvqualifierseq
exitDeclaration
exitDeclarationseq
exitDeclarationstatement
exitDeclarator
exitDeclaratorid
exitDeclspecifier
exitDeclspecifierseq
exitDecltypespecifier
exitDeleteexpression
!exitDynamicexceptionspecification
exitElaboratedtypespecifier
exitEmptydeclaration
exitEnumbase
exitEnumerator
exitEnumeratordefinition
exitEnumeratorlist
exitEnumhead
exitEnumkey
exitEnumname
exitEnumspecifier
exitEqualityexpression
exitExceptiondeclaration
exitExceptionspecification
exitExclusiveorexpression
exitExplicitinstantiation
exitExplicitspecialization
exitExpression
exitExpressionlist
exitExpressionstatement
 exitExtensionnamespacedefinition
exitForinitstatement
exitForrangedeclaration
exitForrangeinitializer
exitFunctionbody
exitFunctiondefinition
exitFunctionspecifier
exitFunctiontryblock
exitHandler
exitHandlerseq
exitIdexpression
exitInclusiveorexpression
exitInitcapture
exitInitdeclarator
exitInitdeclaratorlist
exitInitializer
exitInitializerclause
exitInitializerlist
exitIterationstatement
exitJumpstatement
exitLabeledstatement
exitLambdacapture
exitLambdadeclarator
exitLambdaexpression
exitLambdaintroducer
exitLinkagespecification
exitLiteral
exitLiteraloperatorid
exitLogicalandexpression
exitLogicalorexpression
exitMemberdeclaration
exitMemberdeclarator
exitMemberdeclaratorlist
exitMemberspecification
exitMeminitializer
exitMeminitializerid
exitMeminitializerlist
exitMultiplicativeexpression
exitNamednamespacedefinition
exitNamespacealias
exitNamespacealiasdefinition
exitNamespacebody
exitNamespacedefinition
exitNamespacename
exitNestednamespecifier
exitNewdeclarator
exitNewexpression
exitNewinitializer
exitNewplacement
exitNewtypeid
exitNoexceptexpression
exitNoexceptspecification
exitNoptrabstractdeclarator
exitNoptrabstractpackdeclarator
exitNoptrdeclarator
exitNoptrnewdeclarator
exitOpaqueenumdeclaration
exitOperatorfunctionid
exitOriginalnamespacedefinition
exitOriginalnamespacename
exitParameterdeclaration
exitParameterdeclarationclause
exitParameterdeclarationlist
exitParametersandqualifiers
exitPmexpression
exitPointerliteral
exitPostfixexpression
exitPrimaryexpression
exitPseudodestructorname
exitPtrabstractdeclarator
exitPtrdeclarator
exitPtroperator
exitPurespecifier
exitQualifiedid
exitQualifiednamespacespecifier
exitRefqualifier
exitRelationalexpression
exitSelectionstatement
exitShiftexpression
exitShiftoperator
exitSimplecapture
exitSimpledeclaration
exitSimpletemplateid
exitSimpletypespecifier
exitStatement
exitStatementseq
exitStatic_assertdeclaration
exitStorageclassspecifier
exitTemplateargument
exitTemplateargumentlist
exitTemplatedeclaration
exitTemplateid
exitTemplatename
exitTemplateparameter
exitTemplateparameterlist
exitTheoperator
exitThetypeid
exitThetypename
exitThrowexpression
exitTrailingreturntype
exitTrailingtypespecifier
exitTrailingtypespecifierseq
exitTranslationunit
exitTryblock
exitTypedefname
exitTypeidlist
exitTypeidofexpr
exitTypeidofthetypeid
exitTypenamespecifier
exitTypeparameter
exitTypespecifier
exitTypespecifierseq
exitUnaryexpression
exitUnaryoperator
exitUnnamednamespacedefinition
exitUnqualifiedid
exitUserdefinedliteral
exitUsingdeclaration
exitUsingdirective
exitVirtspecifier
exitVirtspecifierseq   
ˇˇˇˇˇˇˇˇˇ  





 

	 
ˇˇˇˇˇˇˇˇˇ 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	  
	" 
	$ 
	& 
	( 
	* 
	, 
	. 
	0 
	2 
	4 
	6 
	8 
	: 
	< 
	> 
	@ 
	B 
	D 
	F 
	H 
	J 
	L 
	N 
	P 
	R 
	T 
	V 
	X 
	Z 
	\ 
	^ 
	` 
	b 
	d 
	f 
	h 
	j 
	l 
	n 
	p 
	r 
	t 
	v 
	x 
	z 
	| 
	~ 
	Ä 
	Ç 
	Ñ 
	Ü 
	à 
	ä 
	å 
	é 
	ê 
	í 
	î 
	ñ 
	ò 
	ö 
	ú 
	û 
	† 
	¢ 
	§ 
	¶ 
	® 
	™ 
	¨ 
	Æ 
	∞ 
	≤ 
	¥ 
	∂ 
	∏ 
	∫ 
	º 
	æ 
	¿ 
	¬ 
	ƒ 
	∆ 
	» 
	  
	Ã 
	Œ 
	– 
	“ 
	‘ 
	÷ 
	ÿ 
	⁄ 
	‹ 
	ﬁ 
	‡ 
	‚ 
	‰ 
	Ê 
	Ë 
	Í 
	Ï 
	Ó 
	 
	Ú 
	Ù 
	ˆ 
	¯ 
	˙ 
	¸ 
	˛ 
	Ä 
	Ç 
	Ñ 
	Ü 
	à 
	ä 
	å 
	é 
	ê 
	í 
	î 
	ñ 
	ò 
	ö 
	ú 
	û 
	† 
	¢ 
	§ 
	¶ 
	® 
	™ 
	¨ 
	Æ 
	∞ 
	≤ 
	¥ 
	∂ 
	∏ 
	∫ 
	º 
	æ 
	¿ 
	¬ 
	ƒ 
	∆ 
	» 
	  
	Ã 
	Œ 
	– 
	“ 
	‘ 
	÷ 
	ÿ 
	⁄ 
	‹ 
	ﬁ 
	‡ 
	‚ 
	‰ 
	Ê 
	Ë 
	Í 
	Ï 
	Ó 
	 
	Ú 
	Ù 
	ˆ 
	¯ 
	˙ 
	¸ 
	˛ 
	Ä 
	Ç 
	Ñ 
	Ü 
	à 
	ä 
	å 
	é 
	ê 
	í 
	î 
	ñ 
	ò 
	ö Ï    |20B*000J*0
0
HJ*00HJ02*00HJ02*00HJ0H   ˚
CPP14Parser
TranslationunitContext
org
antlr
v4
runtime
ParserRuleContext
parent
invokingState
kotlin
Int
EOF
tree
TerminalNode
declarationseq
DeclarationseqContext
	enterRule
Unit
listener
ParseTreeListener
exitRule
getRuleIndex   i
ˇˇˇˇˇˇˇˇˇ  
  




 
	

 

	 
  
 
	 ı    |20B*000J0	2*00HJ0	2*00HJ0HJ*00HJ*00H  
CPP14Parser
IdexpressionContext
org
antlr
v4
runtime
ParserRuleContext
parent
invokingState
kotlin
Int
	enterRule
Unit
listener
tree
ParseTreeListener
exitRule
getRuleIndex
qualifiedid
QualifiedidContext
unqualifiedid
UnqualifiedidContext   i
ˇˇˇˇˇˇˇˇˇ  
  




 
	

 
 


 
  
  